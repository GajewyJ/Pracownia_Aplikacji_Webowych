generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model adresses {
  id      Int       @id @default(autoincrement())
  adress  String?   @db.Text
  dealers dealers[]
}

model cars {
  id                 Int          @id @default(autoincrement())
  brand              String?      @db.Text
  model              String?      @db.Text
  productionYear     Int?
  registrationNumber String?      @db.Text
  dealer             Int?
  dealers            dealers?     @relation(fields: [dealer], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cars_ibfk_1")
  testdrives         testdrives[]

  @@index([dealer], map: "dealer")
}

model clients {
  id         Int          @id @default(autoincrement())
  name       String?      @db.Text
  testdrives testdrives[]
}

model dealers {
  id       Int       @id @default(autoincrement())
  name     String?   @db.Text
  adress   Int?
  cars     cars[]
  adresses adresses? @relation(fields: [adress], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dealers_ibfk_1")
  sales    sales[]

  @@index([adress], map: "adress")
}

model sales {
  id      Int      @id @default(autoincrement())
  client  String?  @db.Text
  price   Float?
  dealer  Int?
  dealers dealers? @relation(fields: [dealer], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_ibfk_1")

  @@index([dealer], map: "dealer")
}

model testdrives {
  id         Int       @id @default(autoincrement())
  clientsId  Int?
  carsId     Int?
  drivesDate DateTime? @db.Date
  clients    clients?  @relation(fields: [clientsId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "testdrives_ibfk_1")
  cars       cars?     @relation(fields: [carsId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "testdrives_ibfk_2")

  @@index([carsId], map: "carsId")
  @@index([clientsId], map: "clientsId")
}
